package com.abc.ppmimage;

import java.io.*;
import com.abc.thread.*;
import com.abc.pp.fifo.deluxe_bounded.*;
import com.abc.pp.fifo.deluxe_bounded.impl.*;

public class PpmImageDemo {

    public static void main(String[] args) {
        NanoTimer timer = NanoTimer.createStarted();
        NanoTimer ioTimer = NanoTimer.createStopped();
        NanoTimer imageProcessingTimer = NanoTimer.createStopped();

        PPDeluxeBoundedFifo<PpmImage> imageFlipped = ;
        PPDeluxeBoundedFifo<PpmImage> imageGray = ;


        try {
            ioTimer.start();
            ThreadTools.outln("reading penguin...");
            PpmImage penguinOriginal = PpmImage.createFromFilename("src/images/penguin.ppm");
            ThreadTools.outln("reading flowers...");
            PpmImage flowersOriginal = PpmImage.createFromFilename("src/images/flowers.ppm");
            ioTimer.stop();

            imageProcessingTimer.start();
            ThreadTools.outln("processing penquin - flipping");
            FlipHorizontally flipPenguin = new FlipHorizontally(penguinOriginal, imageFlipped);
            ThreadTools.outln("processing penguin - grayscaling");
            Grayscale grayPenguin = new Grayscale(imageFlipped, imageGray, penguinOriginal);


            ThreadTools.outln("processing flowers - flipping");
            FlipHorizontally flipFlower = new FlipHorizontally(flowerOriginal, imageFlipped);
            ThreadTools.outln("processing flowers - grayscaling");
            Grayscale grayPenguin = new Grayscale(imageFlipped, imageGray, flowerOriginal);
            imageProcessingTimer.stop();

            ioTimer.start();
            ThreadTools.outln("writing penguin images");
            penguinFlippedHorizontally.writeToFilename("src/images/penguin-flipped-horiz.ppm");
            penguinFlippedAndGrayscaled.writeToFilename("src/images/penguin-flipped-horiz-and-grayscaled.ppm");

            ThreadTools.outln("writing flowers images");
            flowersFlippedHorizontally.writeToFilename("src/images/flowers-flipped-horiz.ppm");
            flowersFlippedAndGrayscaled.writeToFilename("src/images/flowers-flipped-horiz-and-grayscaled.ppm");
            ioTimer.stop();
        } catch (FileNotFoundException x) {
            x.printStackTrace();
        } catch (IOException x) {
            x.printStackTrace();
        } finally {
            timer.stop();
            ThreadTools.outln("finished processing images, overall took %.5fs, %.5fs I/O, %.5fs image manipulation",
                timer.getElapsedSeconds(), ioTimer.getElapsedSeconds(), imageProcessingTimer.getElapsedSeconds());
        }
    }
}
